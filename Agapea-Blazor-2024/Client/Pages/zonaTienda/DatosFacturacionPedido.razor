@using AgapeaBlazor2024.Client.Models.Services.Interfaces
@inject IRestService restSvc

<div class="row" id="filafacturacontainer">
    <div class="container" id="facturacontainer">

        <div class="row mt-4">
            <div class="col-1"><img src="/images/img2_mostrar_pedido_factura.png" style="width: 40px; height:26px;" alt="..." /></div>
            <div class="col-11"><h4><strong>2.- Datos para su factura</strong></h4></div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="tipofactura" id="datosfacturaempresa" checked value="facturaempresa" onchange="@(()=>{ Console.WriteLine(this.checkempresa); this.checkempresa=true; })" />
                    <label class="form-check-label" for="datosfacturaempresa">
                        Empresa
                    </label>
                </div>
            </div>
            <div class="col-6">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="tipofactura" id="datosfacturaparticular" value="facturaparticular" onchange="@(()=> { Console.WriteLine(this.checkempresa); this.checkempresa=false; })" />
                    <label class="form-check-label" for="datosfacturaparticular">
                        Profesional, particular o autononmo
                    </label>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-6">
                <label for="nombreFactura" class="form-label">@( this.checkempresa ? "Nombre de la empresa" : "Apellidos y Nombre" ) </label>
                <input type="text" class="form-control" id="nombreFactura" name="nombreFactura"  />
            </div>
            <div class="col-6">
                <label for="docFactura" class="form-label">@( this.checkempresa ? "CIF" : "NIF" )</label>
                <input type="text" class="form-control" id="docFactura" name="docFactura" />
            </div>
        </div>

@* fila checkbox direccion de facturacio igual q la de envio *@
        <div class="row">
            <div class="col">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="checkdireccionfactura" checked onchange="@(()=> { this.checkmismadirecfactura = ! this.checkmismadirecfactura; this._datosPago.esEnvio_fac = checkmismadirecfactura; })"/>
                    <label class="form-check-label" for="checkdireccionfactura">
                        Direccion de facturacion igual que la de envio
                    </label>
                </div>
            </div>
        </div>

 @* fila para nueva direccion de facturacion si checkbox anterior no esta chequeado*@
    @if (!this.checkmismadirecfactura)
    {
            <div class="row mt-2" id="filadireccionfacturacioncontainer">
                <div class="container" id="direccionfacturacioncontainer">
                    <div class="row">
                        <div class="col-6">
                            <label for="inputPaisFactura" class="form-label">Pais</label>
                            <input type="text" class="form-control" id="inputPaisFactura" placeholder="España" name="paisfactura" @bind="this._datosPago.DireccionFacturacion.Pais" />
                        </div>
                        <div class="col-6">
                            <label for="inputProvinciaFactura" class="form-label">Provincia*</label>
                            <select id="inputProvinciaFactura" class="form-select" name="provinciafactura" @bind="@this._provincia" @oninput="this.cambioProvincia">
                                <option value="-1" defaultValue={true}> - Seleccionar Provincia - </option>
                                @foreach (Provincia unaprov in this.listaProvincias)
                                {
                                    <option value="@String.Concat(unaprov.CPRO,"-",unaprov.PRO)">@unaprov.PRO</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class='row'>
                        <div class="col-6">
                            <label for="inputCalleFactura" class="form-label">Direccion completa*</label>
                            <input type="text" class="form-control" id="inputCalleFactura" placeholder="Mi Direccion" name="callefactura" @bind="this._datosPago.DireccionFacturacion.CP" />
                        </div>

                        <div class="col-2">
                            <label for="inputCPFactura" class="form-label">Codigo Postal*</label>
                            <input type="text" class="form-control" id="inputCPFactura" placeholder="Codigo Postal: 28803" name="cpfactura" @bind="this._datosPago.DireccionFacturacion.CP" />
                        </div>


                        <div class="col-4">
                            <label for="inputMunicipioFactura" class="form-label">Localidad*</label>
                            <select id="inputMunicipioFactura" class="form-select" name="municipiofactura" @bind="@this._municipio" @oninput="this.cambioMunicipio" disabled="@this._provincia.Equals("-1")">
                                <option value="-1" defaultValue={true}> - Selecciona un Municipio -</option>
                                @foreach (Municipio unmun in this.listaMunicipios)
                                {
                                    <option value="@String.Concat(unmun.CMUM,"-",unmun.DMUN50)">@unmun.DMUN50</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>

     }
    </div>
</div>


@code {
    [CascadingParameter(Name = "clienteLogged")]
    public Cliente clienteLogged { get; set; }

    [CascadingParameter(Name = "listaProvincias")]
    public List<Provincia> listaProvincias { get; set; }

    [CascadingParameter(Name = "EditContextFormPedido")]
    public EditContext formPedidoEditContext { get; set; }

    private bool checkempresa { get; set; } = true;
    private bool checkmismadirecfactura { get; set; } = true;

    private DatosPago _datosPago = new DatosPago();

    private string _provincia { get; set; }
    private string _municipio { get; set; }
    private List<Municipio> listaMunicipios { get; set; } = new List<Municipio>();

    protected override void OnInitialized()
    {
        this._datosPago = this.formPedidoEditContext.Model as DatosPago;
    }

    public async Task cambioProvincia(ChangeEventArgs ev)
    {
        if (ev.Value.ToString() != "-1")
        {
            this._datosPago.DireccionEnvio.ProvinciaDirec = new Provincia
                {
                    CCOM = "",
                    CPRO = ev.Value.ToString().Split("-")[0],
                    PRO = ev.Value.ToString().Split("-")[1]

                };
            //cargar municipios de la provincia seleccionada
            this.listaMunicipios = await this.restSvc.RecuperarMunicipios(ev.Value.ToString().Split("-")[0]);
        }

    }

    public async Task cambioMunicipio(ChangeEventArgs ev)
    {
        if (ev.Value.ToString() != "-1")
        {
            this._datosPago.DireccionEnvio.MunicipioDirec = new Municipio
                {
                    CPRO = _provincia.Split("-")[0],
                    CMUM = ev.Value.ToString().Split("-")[0],
                    DMUN50 = ev.Value.ToString().Split("-")[1]


                };
        }

    }



}
